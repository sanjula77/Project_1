name: Node.js CI/CD with AWS & MongoDB

on:
  push:
    branches:
      - main  # Runs only on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker image
        run: |
          IMAGE_NAME=sanjula77/project1-node-app
          TAG=${{ github.sha }}  # Use commit SHA as the tag for versioning
          docker build -t $IMAGE_NAME:$TAG -t $IMAGE_NAME:latest .

      - name: Push Docker image to Docker Hub
        run: |
          IMAGE_NAME=sanjula77/project1-node-app
          TAG=${{ github.sha }}
          docker push $IMAGE_NAME:$TAG
          docker push $IMAGE_NAME:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ec2-user
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
            IMAGE_NAME=sanjula77/project1-node-app
            TAG=${{ github.sha }}

            echo "Stopping and removing existing container..."
            docker stop project1-node-app || true
            docker rm project1-node-app || true

            echo "Pulling latest Docker image..."
            docker pull $IMAGE_NAME:$TAG

            echo "Running new container..."
            docker run -d -p 80:3000 --name project1-node-app \
              --restart unless-stopped \
              -e MONGO_URI=${{ secrets.MONGO_URI }} \
              $IMAGE_NAME:$TAG

            echo "Deployment completed successfully!"




# name: Node.js CI/CD with AWS & MongoDB

# on: push

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'

#       - name: Install dependencies
#         run: npm install

#       - name: Run tests
#         run: npm test

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: SSH into EC2 and deploy
#         uses: appleboy/ssh-action@v0.1.10
#         with:
#           host: ${{ secrets.AWS_HOST }}
#           username: ec2-user
#           key: ${{ secrets.AWS_PRIVATE_KEY }}
#           script: |
#             echo "Stopping existing container if running..."
#             CONTAINER_ID=$(docker ps -aq -f name=project1_node-app)
#             if [ -n "$CONTAINER_ID" ]; then
#               docker stop project1_node-app && docker rm project1_node-app
#             fi

#             echo "Pulling latest Docker image..."
#             docker pull sanjula77/project1_node-app  # Ensure no --no-cache flag

#             echo "Running new container..."
#             docker run -d -p 80:3000 --name project1_node-app \
#               --restart unless-stopped \
#               -e MONGO_URI=${{ secrets.MONGO_URI }} \
#               sanjula77/project1_node-app  # Ensure image exists and is correct

#             echo "Deployment completed successfully!"
